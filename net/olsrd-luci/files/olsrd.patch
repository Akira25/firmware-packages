--- olsrd.init	2010-09-15 21:16:11.000000000 +0200
+++ olsrdv6.init	2010-01-06 20:48:53.000000000 +0100
@@ -1,50 +1,54 @@
 #!/bin/sh /etc/rc.common
 # Copyright (C) 2008  Alina Friedrichsen <x-alina@gmx.net>
 # Special thanks to bittorf wireless ))
-START=65
+START=51
 
-OLSRD_OLSRD_SCHEMA='ignore:internal config_file:internal DebugLevel=0'
-OLSRD_IPCCONNECT_SCHEMA='ignore:internal Host:list Net:list2'
-OLSRD_LOADPLUGIN_SCHEMA='ignore:internal library:internal Host4:list Net4:list2 Host:list Net:list2 Host6:list Net6:list2 Ping:list redistribute:list NonOlsrIf:list name:list lat lon latlon_infile HNA:list2 hosts:list2'
-OLSRD_INTERFACE_SCHEMA='ignore:internal interface:internal AutoDetectChanges:bool'
+BIN=olsrd
+CONF=/var/etc/olsrdv6.conf
+PID=/var/run/olsrdv6.pid
+
+OLSRDV6_OLSRDV6_SCHEMA='ignore:internal config_file:internal DebugLevel=0 IpVersion=6 AllowNoInt:bool=1 Pollrate=0.025 TcRedundancy=2 MprCoverage=3 LinkQualityFishEye=1 LinkQualityDijkstraLimit=0+9.0 FIBMetric=flat ClearScreen:bool=1 Willingness=3 LinkQualityAging=0.1 LinkQualityAlgorithm=etx_fpm'
+OLSRDV6_IPCCONNECT_SCHEMA='ignore:internal Host:list Net:list2'
+OLSRDV6_LOADPLUGIN_SCHEMA='ignore:internal library:internal Host:list Net:list2 Ping:list redistribute:list NonOlsrIf:list name:list lat lon latlon_infile HNA:list2 hosts:list2'
+OLSRDV6_INTERFACE_SCHEMA='ignore:internal interface:internal AutoDetectChanges:bool HelloInterval=5.0 HelloValidityTime=40.0 TcInterval=2.0 TcValidityTime=256.0 MidInterval=18.0 MidValidityTime=324.0 HnaInterval=18.0 HnaValidityTime=108.0'
 
 T='	'
 N='
 '
 
 validate_varname() {
-	local varname="$1"
+	local varname=$1
 	[ -z "$varname" -o "$varname" != "${varname%%[!A-Za-z0-9_]*}" ] && return 1
 	return 0
 }
 
 validate_ifname() {
-	local ifname="$1"
+	local ifname=$1
 	[ -z "$ifname" -o "$ifname" != "${ifname%%[!A-Za-z0-9.:_-]*}" ] && return 1
 	return 0
 }
 
-validate_olsrd_option() {
-	local str="$1"
+validate_olsrdv6_option() {
+	local str=$1
 	[ -z "$str" -o "$str" != "${str%%[! 	0-9A-Za-z./|:_-]*}" ] && return 1
 	return 0
 }
 
 get_ifname() {
 	IFNAME=
-	local interface="$1"
+	local interface=$1
 	validate_varname "$interface" || return 1
 	local ifname
 
 	config_get ifname "$interface" ifname
 	validate_ifname "$ifname" || return 1
-	IFNAME="$ifname"
+	IFNAME=$ifname
 
 	return 0
 }
 
 system_config() {
-	local cfg="$1"
+	local cfg=$1
 	local cfgt
 	local hostname
 	local latlon
@@ -53,8 +57,8 @@
 
 	if [ "$cfgt" = "system" ]; then
 		config_get hostname "$cfg" hostname
-		hostname="${hostname:-OpenWrt}"
-		SYSTEM_HOSTNAME="$hostname"
+		hostname=${hostname:-OpenWrt}
+		SYSTEM_HOSTNAME=$hostname
 	fi
 
 	if [ -z "$SYSTEM_LAT" -o -z "$SYSTEM_LON" ]; then
@@ -62,35 +66,28 @@
 		IFS=" ${T}${N},"
 		set -- $latlon
 		unset IFS
-		SYSTEM_LAT="$1"
-		SYSTEM_LON="$2"
-	fi
-
-	if [ -z "$SYSTEM_LAT" -o -z "$SYSTEM_LON" ]; then
-		config_get latlon "$cfg" latitude
-		SYSTEM_LAT="$latlon"
-		config_get latlon "$cfg" longitude
-		SYSTEM_LON="$latlon"
+		SYSTEM_LAT=$1
+		SYSTEM_LON=$2
 	fi
 }
 
-olsrd_find_config_file() {
-	local cfg="$1"
+olsrdv6_find_config_file() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 
 	config_get_bool ignore "$cfg" ignore 0
 	[ "$ignore" -ne 0 ] && return 0
-	config_get OLSRD_CONFIG_FILE "$cfg" config_file
+	config_get OLSRDV6_CONFIG_FILE "$cfg" config_file
 
 	return 0
 }
 
 warning_invalid_value() {
-	local package="$1"
+	local package=$1
 	validate_varname "$package" || package=
-	local config="$2"
+	local config=$2
 	validate_varname "$config" || config=
-	local option="$3"
+	local option=$3
 	validate_varname "$option" || option=
 
 	echo -n "Warning: Invalid value" 1>&2
@@ -104,24 +101,24 @@
 	return 0
 }
 
-olsrd_write_option() {
-	local param="$1"
-	local cfg="$2"
+olsrdv6_write_option() {
+	local param=$1
+	local cfg=$2
 	validate_varname "$cfg" || return 1
-	local option="$3"
+	local option=$3
 	validate_varname "$option" || return 1
-	local value="$4"
-	local option_type="$5"
+	local value=$4
+	local option_type=$5
 
 	if [ "$option_type" = bool ]; then
 		case "$value" in
 			1|on|true|enabled|yes) value=yes;;
 			0|off|false|disabled|no) value=no;;
-			*) warning_invalid_value olsrd "$cfg" "$option"; return 1;;
+			*) warning_invalid_value olsrdv6 "$cfg" "$option"; return 1;;
 		esac
 	fi
 
-	if ! validate_olsrd_option "$value"; then
+	if ! validate_olsrdv6_option "$value"; then
 		warning_invalid_value olsrd "$cfg" "$option"
 		return 1
 	fi
@@ -137,26 +134,26 @@
 	return 0
 }
 
-olsrd_write_plparam() {
-	local param="$1"
-	local cfg="$2"
+olsrdv6_write_plparam() {
+	local param=$1
+	local cfg=$2
 	validate_varname "$cfg" || return 1
-	local option="$3"
+	local option=$3
 	validate_varname "$option" || return 1
-	local value="$4"
-	local option_type="$5"
+	local value=$4
+	local option_type=$5
 	local _option
 
 	if [ "$option_type" = bool ]; then
 		case "$value" in
 			1|on|true|enabled|yes) value=yes;;
 			0|off|false|disabled|no) value=no;;
-			*) warning_invalid_value olsrd "$cfg" "$option"; return 1;;
+			*) warning_invalid_value olsrdv6 "$cfg" "$option"; return 1;;
 		esac
 	fi
 
-	if ! validate_olsrd_option "$value"; then
-		warning_invalid_value olsrd "$cfg" "$option"
+	if ! validate_olsrdv6_option "$value"; then
+		warning_invalid_value olsrdv6 "$cfg" "$option"
 		return 1
 	fi
 
@@ -167,23 +164,10 @@
 	_option="$option"
 	if [ "$option" = 'hosts' ]; then
 		set -- $value
-		option="$1"
+		option=$1
 		shift
 		value="$*"
 	fi
-	if [ "$option" = 'NonOlsrIf' ]; then
-		if validate_varname "$value"; then
-			if get_ifname "$value"; then
-				ifname="$IFNAME"
-				echo "Info: mdns Interface '$value' ifname '$ifname' found" 1>&2
-			else
-				echo "Warning: mdns Interface '$value' not found, skipped" 1>&2
-			fi
-		else
-			warning_invalid_value olsrd "$cfg" "NonOlsrIf"
-		fi
-		[ -z "$ifname" ] || value=$ifname
-	fi
 
 	echo -n "${N}${param}PlParam \"$option\" \"$value\""
 
@@ -192,13 +176,13 @@
 
 config_update_schema() {
 	unset IFS
-	local schema_varname="$1"
+	local schema_varname=$1
 	validate_varname "$schema_varname" || return 1
-	local command="$2"
+	local command=$2
 	validate_varname "$command" || return 1
-	local option="$3"
+	local option=$3
 	validate_varname "$option" || return 1
-	local value="$4"
+	local value=$4
 	local schema
 	local cur_option
 
@@ -233,12 +217,12 @@
 
 config_write_options() {
 	unset IFS
-	local schema="$1"
-	local cfg="$2"
+	local schema=$1
+	local cfg=$2
 	validate_varname "$cfg" || return 1
-	local write_func="$3"
+	local write_func=$3
 	[ -z "$write_func" ] && output_func=echo
-	local write_param="$4"
+	local write_param=$4
 	local schema_entry
 	local option
 	local option_length
@@ -252,14 +236,14 @@
 	local position
 
 	for schema_entry in $schema; do
-		default="${schema_entry#*[=]}"
+		default=${schema_entry#*[=]}
 		[ "$default" = "$schema_entry" ] && default=
-		option="${schema_entry%%[=]*}"
+		option=${schema_entry%%[=]*}
 		IFS=':'
 		set -- $option
 		unset IFS
-		option="$1"
-		option_type="$2"
+		option=$1
+		option_type=$2
 		validate_varname "$option" || continue
 		[ -z "$option_type" ] || validate_varname "$option_type" || continue
 		[ "$option_type" = internal ] && continue
@@ -314,32 +298,25 @@
 	return 0
 }
 
-olsrd_write_olsrd() {
-	local cfg="$1"
+olsrdv6_write_olsrdv6() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
-	local ipversion
 
 	config_get_bool ignore "$cfg" ignore 0
 	[ "$ignore" -ne 0 ] && return 0
 
-	[ "$OLSRD_COUNT" -gt 0 ] && return 0
+	[ "$OLSRDV6_COUNT" -gt 0 ] && return 0
 
-	config_get ipversion "$cfg" IpVersion
-	if [ "$ipversion" = "6and4" ]; then
-		OLSRD_IPVERSION_6AND4=1
-		config_set "$cfg" IpVersion '6'
-	fi
-
-	config_write_options "$OLSRD_OLSRD_SCHEMA" "$cfg" olsrd_write_option
+	config_write_options "$OLSRDV6_OLSRDV6_SCHEMA" "$cfg" olsrdv6_write_option
 	echo
-	OLSRD_COUNT=$((OLSRD_COUNT + 1))
+	OLSRDV6_COUNT=$((OLSRDV6_COUNT + 1))
 
 	return 0
 }
 
-olsrd_write_ipcconnect() {
-	local cfg="$1"
+olsrdv6_write_ipcconnect() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
 
@@ -356,8 +333,8 @@
 	return 0
 }
 
-olsrd_write_hna4() {
-	local cfg="$1"
+olsrdv6_write_hna4() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
 
@@ -365,26 +342,26 @@
 	[ "$ignore" -ne 0 ] && return 0
 
 	config_get netaddr "$cfg" netaddr
-	if ! validate_olsrd_option "$netaddr"; then
-		warning_invalid_value olsrd "$cfg" "netaddr"
+	if ! validate_olsrdv6_option "$netaddr"; then
+		warning_invalid_value olsrdv6 "$cfg" "netaddr"
 		return 0
 	fi
 
 	config_get netmask "$cfg" netmask
-	if ! validate_olsrd_option "$netmask"; then
-		warning_invalid_value olsrd "$cfg" "netmask"
+	if ! validate_olsrdv6_option "$netmask"; then
+		warning_invalid_value olsrdv6 "$cfg" "netmask"
 		return 0
 	fi
 
 	[ "$HNA4_COUNT" -le 0 ] && echo -n "${N}Hna4${N}{"
-	echo -n "${N}${T}${T}$netaddr $netmask"
+	echo -n "${N}${T}$netaddr $netmask"
 	HNA4_COUNT=$((HNA4_COUNT + 1))
 
 	return 0
 }
 
-olsrd_write_hna6() {
-	local cfg="$1"
+olsrdv6_write_hna6() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
 
@@ -392,26 +369,26 @@
 	[ "$ignore" -ne 0 ] && return 0
 
 	config_get netaddr "$cfg" netaddr
-	if ! validate_olsrd_option "$netaddr"; then
-		warning_invalid_value olsrd "$cfg" "netaddr"
+	if ! validate_olsrdv6_option "$netaddr"; then
+		warning_invalid_value olsrdv6 "$cfg" "netaddr"
 		return 0
 	fi
 
 	config_get prefix "$cfg" prefix
-	if ! validate_olsrd_option "$prefix"; then
-		warning_invalid_value olsrd "$cfg" "prefix"
+	if ! validate_olsrdv6_option "$prefix"; then
+		warning_invalid_value olsrdv6 "$cfg" "prefix"
 		return 0
 	fi
 
 	[ "$HNA6_COUNT" -le 0 ] && echo -n "${N}Hna6${N}{"
-	echo -n "${N}${T}${T}$netaddr $prefix"
+	echo -n "${N}${T}$netaddr $prefix"
 	HNA6_COUNT=$((HNA6_COUNT + 1))
 
 	return 0
 }
 
-olsrd_write_loadplugin() {
-	local cfg="$1"
+olsrdv6_write_loadplugin() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
 	local name
@@ -424,8 +401,8 @@
 	[ "$ignore" -ne 0 ] && return 0
 
 	config_get library "$cfg" library
-	if ! validate_olsrd_option "$library"; then
-		warning_invalid_value olsrd "$cfg" "library"
+	if ! validate_olsrdv6_option "$library"; then
+		warning_invalid_value olsrdv6 "$cfg" "library"
 		return 0
 	fi
 	if ! [ -x "/lib/$library" -o -x "/usr/lib/$library" -o -x "/usr/local/lib/$library" ]; then
@@ -456,19 +433,18 @@
 			fi
 
 			config_get latlon_file "$cfg" latlon_file
-			[ -z "$latlon_file" ] && config_set "$cfg" latlon_file '/var/run/latlon.js'
 		;;
 	esac
 
 	echo -n "${N}LoadPlugin \"$library\"${N}{"
-	config_write_options "$OLSRD_LOADPLUGIN_SCHEMA" "$cfg" olsrd_write_plparam "${T}"
+	config_write_options "$OLSRDV6_LOADPLUGIN_SCHEMA" "$cfg" olsrdv6_write_plparam "${T}"
 	echo "${N}}"
 
 	return 0
 }
 
-olsrd_write_interface() {
-	local cfg="$1"
+olsrdv6_write_interface() {
+	local cfg=$1
 	validate_varname "$cfg" || return 0
 	local ignore
 	local interfaces
@@ -495,14 +471,14 @@
 	[ -z "$ifnames" ] && return 0
 
 	echo -n "${N}Interface$ifnames${N}{"
-	config_write_options "$OLSRD_INTERFACE_SCHEMA" "$cfg" olsrd_write_option "${T}"
+	config_write_options "$OLSRDV6_INTERFACE_SCHEMA" "$cfg" olsrdv6_write_option "${T}"
 	echo "${N}}"
 	INTERFACES_COUNT=$((INTERFACES_COUNT + 1))
 
 	return 0
 }
 
-olsrd_update_schema() {
+olsrdv6_update_schema() {
 	local command="$1"
 	validate_varname "$command" || return 0
 	local varname="$2"
@@ -514,36 +490,46 @@
 
 	config_get cfgt "$cfg" TYPE
 	case "$cfgt" in
-		olsrd) config_update_schema OLSRD_OLSRD_SCHEMA "$command" "$varname" "$value";;
-		IpcConnect) config_update_schema OLSRD_IPCCONNECT_SCHEMA "$command" "$varname" "$value";;
-		LoadPlugin) config_update_schema OLSRD_LOADPLUGIN_SCHEMA "$command" "$varname" "$value";;
-		Interface) config_update_schema OLSRD_INTERFACE_SCHEMA "$command" "$varname" "$value";;
+		olsrdv6) config_update_schema OLSRDV6_OLSRD_SCHEMA "$command" "$varname" "$value";;
+		IpcConnect) config_update_schema OLSRDV6_IPCCONNECT_SCHEMA "$command" "$varname" "$value";;
+		LoadPlugin) config_update_schema OLSRDV6_LOADPLUGIN_SCHEMA "$command" "$varname" "$value";;
+		Interface) config_update_schema OLSRDV6_INTERFACE_SCHEMA "$command" "$varname" "$value";;
 	esac
 
 	return 0
 }
 
-olsrd_write_config() {
-	OLSRD_IPVERSION_6AND4=0
-	OLSRD_COUNT=0
-	config_foreach olsrd_write_olsrd olsrd
+olsrdv6_write_config() {
+	OLSRDV6_COUNT=0
+	config_foreach olsrdv6_write_olsrdv6 olsrdv6
 	IPCCONNECT_COUNT=0
-	config_foreach olsrd_write_ipcconnect IpcConnect
+	config_foreach olsrdv6_write_ipcconnect IpcConnect
 	HNA4_COUNT=0
-	config_foreach olsrd_write_hna4 Hna4
+	config_foreach olsrdv6_write_hna4 Hna4
 	[ "$HNA4_COUNT" -gt 0 ] && echo "${N}}"
 	HNA6_COUNT=0
-	config_foreach olsrd_write_hna6 Hna6
+	config_foreach olsrdv6_write_hna6 Hna6
 	[ "$HNA6_COUNT" -gt 0 ] && echo "${N}}"
-	config_foreach olsrd_write_loadplugin LoadPlugin
+	config_foreach olsrdv6_write_loadplugin LoadPlugin
 	INTERFACES_COUNT=0
-	config_foreach olsrd_write_interface Interface
+	config_foreach olsrdv6_write_interface Interface
 	echo
 
 	return 0
 }
 
 start() {
+	### check for running instance
+	if [ -s $PID ]; then
+		if kill -0 $(cat $PID) 2>&-; then
+			echo "there is already a running instance ($(cat $PID))"
+			return 1
+		fi
+	fi
+
+	### disable icmp redirects
+	#echo 0 > /proc/sys/net/ipv4/conf/all/send_redirects
+
 	SYSTEM_HOSTNAME=
 	SYSTEM_LAT=
 	SYSTEM_LON=
@@ -551,47 +537,62 @@
 	config_foreach system_config system
 
 	option_cb() {
-		olsrd_update_schema "option" "$@"
+		olsrdv6_update_schema "option" "$@"
 	}
 
 	list_cb() {
-		olsrd_update_schema "list" "$@"
+		olsrdv6_update_schema "list" "$@"
 	}
 
 	include /lib/network
 	scan_interfaces
-	config_load olsrd
+	config_load olsrdv6
 	reset_cb
 
-	OLSRD_CONFIG_FILE=
-	config_foreach olsrd_find_config_file olsrd
+	OLSRDV6_CONFIG_FILE=
+	config_foreach olsrdv6_find_config_file olsrdv6
 
-	if [ -z "$OLSRD_CONFIG_FILE" ]; then
-		mkdir -p -- /var/etc/
-		olsrd_write_config > /var/etc/olsrd.conf
-		if [ "$INTERFACES_COUNT" -gt 0 -a "$OLSRD_COUNT" -gt 0 ]; then
-			OLSRD_CONFIG_FILE=/var/etc/olsrd.conf
+	if [ -z "$OLSRDV6_CONFIG_FILE" ]; then
+		echo "generate config"
+		mkdir -p ${CONF%/*}
+		olsrdv6_write_config > $CONF
+		if [ "$INTERFACES_COUNT" -gt 0 -a "$OLSRDV6_COUNT" -gt 0 ]; then
+			OLSRDV6_CONFIG_FILE=$CONF
 		fi
 	fi
 
-	[ -z "$OLSRD_CONFIG_FILE" ] && return 1
+	[ -z "$OLSRDV6_CONFIG_FILE" ] && return 1
 
+#	killall olsrd
+#	killall -9 olsrd
 	local bindv6only='0'
-	if [ "$OLSRD_IPVERSION_6AND4" -ne 0 ]; then
-		bindv6only="$(sysctl -n net.ipv6.bindv6only)"
-		sysctl -w net.ipv6.bindv6only=1
-		sed -e 's/^\t\t[0-9.]*[ ][0-9.]*$//' < "$OLSRD_CONFIG_FILE" > /var/etc/olsrd.conf.ipv6
-		olsrd -f /var/etc/olsrd.conf.ipv6 -nofork < /dev/null > /dev/null &
-
-		sed -e 's/^IpVersion[ ][ ]*6$/IpVersion 4/' -e 's/^\t\t[A-Fa-f0-9.:]*[:][A-Fa-f0-9.:]*[ ][0-9]*$//' < "$OLSRD_CONFIG_FILE" > /var/etc/olsrd.conf.ipv4
-		olsrd -f /var/etc/olsrd.conf.ipv4 -nofork < /dev/null > /dev/null &
-		sleep 3
-		sysctl -w net.ipv6.bindv6only="$bindv6only"
-	else
-		olsrd -f "$OLSRD_CONFIG_FILE" -nofork < /dev/null > /dev/null &
-	fi
+	bindv6only="$(sysctl -n net.ipv6.bindv6only)"
+	sysctl -w net.ipv6.bindv6only=1
+	rm /etc/olsrd.conf.lock
+	### start olsrd
+        $BIN -f "$CONF" -nofork -d 1  >/dev/null 2>1 &
+        pid=$!
+        echo $pid > $PID
+        echo $pid
+	sleep 4
+	sysctl -w net.ipv6.bindv6only="$bindv6only"
+#	CONF=/var/etc/olsrd.conf
+#	PID=/var/run/olsrd.pid
+#        $BIN -f "$CONF" -nofork -d 1  >/dev/null 2>1 &
+#        pid=$!
+#        echo $pid > $PID
+#        echo $pid
 }
 
 stop() {
-	killall olsrd
+	### stop olsrd
+	start-stop-daemon -q -p $PID -x $BIN -K
+	#echo "$PID $BIN"
+	### re-enable icmp redirects
+	#echo 1 > /proc/sys/net/ipv4/conf/all/send_redirects
+}
+
+restart() {
+	### override generic restart because we need some time between stop and start
+	stop; sleep 3; start
 }
